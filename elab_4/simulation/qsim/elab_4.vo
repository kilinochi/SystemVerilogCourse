// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.1.0 Build 196 10/24/2016 SJ Lite Edition"

// DATE "05/07/2019 20:15:56"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module elab_4 (
	clk,
	rst,
	sw,
	cout,
	led);
input 	clk;
input 	rst;
input 	[1:0] sw;
output 	cout;
output 	[2:0] led;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Mult0~11 ;
wire \Mult0~12 ;
wire \Mult0~13 ;
wire \Mult0~14 ;
wire \Mult0~15 ;
wire \Mult0~16 ;
wire \Mult0~17 ;
wire \Mult0~18 ;
wire \Mult0~19 ;
wire \Mult0~20 ;
wire \Mult0~21 ;
wire \Mult0~22 ;
wire \Mult0~23 ;
wire \Mult0~24 ;
wire \Mult0~25 ;
wire \Mult0~26 ;
wire \Mult0~27 ;
wire \Mult0~28 ;
wire \Mult0~29 ;
wire \Mult0~30 ;
wire \Mult0~31 ;
wire \Mult0~32 ;
wire \Mult0~33 ;
wire \Mult0~34 ;
wire \Mult0~35 ;
wire \Mult0~36 ;
wire \Mult0~37 ;
wire \Mult0~38 ;
wire \Mult0~39 ;
wire \Mult0~40 ;
wire \Mult0~41 ;
wire \Mult0~42 ;
wire \Mult0~43 ;
wire \Mult0~44 ;
wire \Mult0~45 ;
wire \Mult0~46 ;
wire \Mult0~47 ;
wire \Mult0~48 ;
wire \Mult0~49 ;
wire \Mult0~50 ;
wire \Mult0~51 ;
wire \Mult0~52 ;
wire \Mult0~53 ;
wire \Mult0~54 ;
wire \Mult0~55 ;
wire \Mult0~56 ;
wire \Mult0~57 ;
wire \Mult0~58 ;
wire \Mult0~59 ;
wire \Mult0~60 ;
wire \Mult0~61 ;
wire \Mult0~62 ;
wire \Mult0~63 ;
wire \Mult0~64 ;
wire \Mult0~65 ;
wire \Mult0~66 ;
wire \Mult0~67 ;
wire \Mult0~68 ;
wire \Mult0~69 ;
wire \Mult0~70 ;
wire \Mult0~71 ;
wire \cout~output_o ;
wire \led[0]~output_o ;
wire \led[1]~output_o ;
wire \led[2]~output_o ;
wire \clk~input_o ;
wire \Add0~1_sumout ;
wire \rst~input_o ;
wire \Add0~2 ;
wire \Add0~5_sumout ;
wire \Add0~6 ;
wire \Add0~9_sumout ;
wire \Add0~10 ;
wire \Add0~13_sumout ;
wire \Add0~14 ;
wire \Add0~17_sumout ;
wire \Add0~18 ;
wire \Add0~25_sumout ;
wire \Add0~26 ;
wire \Add0~21_sumout ;
wire \Equal0~0_combout ;
wire \Add0~22 ;
wire \Add0~29_sumout ;
wire \Add0~30 ;
wire \Add0~33_sumout ;
wire \Add0~34 ;
wire \Add0~37_sumout ;
wire \Add0~38 ;
wire \Add0~41_sumout ;
wire \Add0~42 ;
wire \Add0~49_sumout ;
wire \Add0~50 ;
wire \Add0~45_sumout ;
wire \Equal0~1_combout ;
wire \Add0~46 ;
wire \Add0~77_sumout ;
wire \Add0~78 ;
wire \Add0~81_sumout ;
wire \Add0~82 ;
wire \Add0~85_sumout ;
wire \Add0~86 ;
wire \Add0~89_sumout ;
wire \Add0~90 ;
wire \Add0~97_sumout ;
wire \Add0~98 ;
wire \Add0~93_sumout ;
wire \Add0~94 ;
wire \Add0~53_sumout ;
wire \Add0~54 ;
wire \Add0~57_sumout ;
wire \Add0~58 ;
wire \Add0~61_sumout ;
wire \Add0~62 ;
wire \Add0~65_sumout ;
wire \Add0~66 ;
wire \Add0~73_sumout ;
wire \Add0~74 ;
wire \Add0~69_sumout ;
wire \Equal0~2_combout ;
wire \Equal0~3_combout ;
wire \rtl~0_combout ;
wire \sw[1]~input_o ;
wire \always2~0_combout ;
wire \sw[0]~input_o ;
wire \Mult0~8_resulta ;
wire \cnt_main[0]~0_combout ;
wire \rst2~q ;
wire \rst1~q ;
wire \Mult0~9 ;
wire \Add1~0_combout ;
wire \Mult0~10 ;
wire \Add1~1_combout ;
wire [24:0] cnt_div;
wire [2:0] cnt_main;
wire [1:0] sw1;
wire [1:0] sw2;

wire [63:0] \Mult0~8_RESULTA_bus ;

assign \Mult0~8_resulta  = \Mult0~8_RESULTA_bus [0];
assign \Mult0~9  = \Mult0~8_RESULTA_bus [1];
assign \Mult0~10  = \Mult0~8_RESULTA_bus [2];
assign \Mult0~11  = \Mult0~8_RESULTA_bus [3];
assign \Mult0~12  = \Mult0~8_RESULTA_bus [4];
assign \Mult0~13  = \Mult0~8_RESULTA_bus [5];
assign \Mult0~14  = \Mult0~8_RESULTA_bus [6];
assign \Mult0~15  = \Mult0~8_RESULTA_bus [7];
assign \Mult0~16  = \Mult0~8_RESULTA_bus [8];
assign \Mult0~17  = \Mult0~8_RESULTA_bus [9];
assign \Mult0~18  = \Mult0~8_RESULTA_bus [10];
assign \Mult0~19  = \Mult0~8_RESULTA_bus [11];
assign \Mult0~20  = \Mult0~8_RESULTA_bus [12];
assign \Mult0~21  = \Mult0~8_RESULTA_bus [13];
assign \Mult0~22  = \Mult0~8_RESULTA_bus [14];
assign \Mult0~23  = \Mult0~8_RESULTA_bus [15];
assign \Mult0~24  = \Mult0~8_RESULTA_bus [16];
assign \Mult0~25  = \Mult0~8_RESULTA_bus [17];
assign \Mult0~26  = \Mult0~8_RESULTA_bus [18];
assign \Mult0~27  = \Mult0~8_RESULTA_bus [19];
assign \Mult0~28  = \Mult0~8_RESULTA_bus [20];
assign \Mult0~29  = \Mult0~8_RESULTA_bus [21];
assign \Mult0~30  = \Mult0~8_RESULTA_bus [22];
assign \Mult0~31  = \Mult0~8_RESULTA_bus [23];
assign \Mult0~32  = \Mult0~8_RESULTA_bus [24];
assign \Mult0~33  = \Mult0~8_RESULTA_bus [25];
assign \Mult0~34  = \Mult0~8_RESULTA_bus [26];
assign \Mult0~35  = \Mult0~8_RESULTA_bus [27];
assign \Mult0~36  = \Mult0~8_RESULTA_bus [28];
assign \Mult0~37  = \Mult0~8_RESULTA_bus [29];
assign \Mult0~38  = \Mult0~8_RESULTA_bus [30];
assign \Mult0~39  = \Mult0~8_RESULTA_bus [31];
assign \Mult0~40  = \Mult0~8_RESULTA_bus [32];
assign \Mult0~41  = \Mult0~8_RESULTA_bus [33];
assign \Mult0~42  = \Mult0~8_RESULTA_bus [34];
assign \Mult0~43  = \Mult0~8_RESULTA_bus [35];
assign \Mult0~44  = \Mult0~8_RESULTA_bus [36];
assign \Mult0~45  = \Mult0~8_RESULTA_bus [37];
assign \Mult0~46  = \Mult0~8_RESULTA_bus [38];
assign \Mult0~47  = \Mult0~8_RESULTA_bus [39];
assign \Mult0~48  = \Mult0~8_RESULTA_bus [40];
assign \Mult0~49  = \Mult0~8_RESULTA_bus [41];
assign \Mult0~50  = \Mult0~8_RESULTA_bus [42];
assign \Mult0~51  = \Mult0~8_RESULTA_bus [43];
assign \Mult0~52  = \Mult0~8_RESULTA_bus [44];
assign \Mult0~53  = \Mult0~8_RESULTA_bus [45];
assign \Mult0~54  = \Mult0~8_RESULTA_bus [46];
assign \Mult0~55  = \Mult0~8_RESULTA_bus [47];
assign \Mult0~56  = \Mult0~8_RESULTA_bus [48];
assign \Mult0~57  = \Mult0~8_RESULTA_bus [49];
assign \Mult0~58  = \Mult0~8_RESULTA_bus [50];
assign \Mult0~59  = \Mult0~8_RESULTA_bus [51];
assign \Mult0~60  = \Mult0~8_RESULTA_bus [52];
assign \Mult0~61  = \Mult0~8_RESULTA_bus [53];
assign \Mult0~62  = \Mult0~8_RESULTA_bus [54];
assign \Mult0~63  = \Mult0~8_RESULTA_bus [55];
assign \Mult0~64  = \Mult0~8_RESULTA_bus [56];
assign \Mult0~65  = \Mult0~8_RESULTA_bus [57];
assign \Mult0~66  = \Mult0~8_RESULTA_bus [58];
assign \Mult0~67  = \Mult0~8_RESULTA_bus [59];
assign \Mult0~68  = \Mult0~8_RESULTA_bus [60];
assign \Mult0~69  = \Mult0~8_RESULTA_bus [61];
assign \Mult0~70  = \Mult0~8_RESULTA_bus [62];
assign \Mult0~71  = \Mult0~8_RESULTA_bus [63];

cyclonev_io_obuf \cout~output (
	.i(\rtl~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cout~output_o ),
	.obar());
// synopsys translate_off
defparam \cout~output .bus_hold = "false";
defparam \cout~output .open_drain_output = "false";
defparam \cout~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \led[0]~output (
	.i(cnt_main[0]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[0]~output .bus_hold = "false";
defparam \led[0]~output .open_drain_output = "false";
defparam \led[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \led[1]~output (
	.i(cnt_main[1]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[1]~output .bus_hold = "false";
defparam \led[1]~output .open_drain_output = "false";
defparam \led[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \led[2]~output (
	.i(cnt_main[2]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[2]~output .bus_hold = "false";
defparam \led[2]~output .open_drain_output = "false";
defparam \led[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Add0~1 (
// Equation(s):
// \Add0~1_sumout  = SUM(( cnt_div[0] ) + ( VCC ) + ( !VCC ))
// \Add0~2  = CARRY(( cnt_div[0] ) + ( VCC ) + ( !VCC ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[0]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~1_sumout ),
	.cout(\Add0~2 ),
	.shareout());
// synopsys translate_off
defparam \Add0~1 .extended_lut = "off";
defparam \Add0~1 .lut_mask = 64'h00000000000000FF;
defparam \Add0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \rst~input (
	.i(rst),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\rst~input_o ));
// synopsys translate_off
defparam \rst~input .bus_hold = "false";
defparam \rst~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \cnt_div[0] (
	.clk(\clk~input_o ),
	.d(\Add0~1_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[0]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[0] .is_wysiwyg = "true";
defparam \cnt_div[0] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~5 (
// Equation(s):
// \Add0~5_sumout  = SUM(( cnt_div[1] ) + ( GND ) + ( \Add0~2  ))
// \Add0~6  = CARRY(( cnt_div[1] ) + ( GND ) + ( \Add0~2  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[1]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~2 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~5_sumout ),
	.cout(\Add0~6 ),
	.shareout());
// synopsys translate_off
defparam \Add0~5 .extended_lut = "off";
defparam \Add0~5 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~5 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[1] (
	.clk(\clk~input_o ),
	.d(\Add0~5_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[1]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[1] .is_wysiwyg = "true";
defparam \cnt_div[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~9 (
// Equation(s):
// \Add0~9_sumout  = SUM(( cnt_div[2] ) + ( GND ) + ( \Add0~6  ))
// \Add0~10  = CARRY(( cnt_div[2] ) + ( GND ) + ( \Add0~6  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[2]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~6 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~9_sumout ),
	.cout(\Add0~10 ),
	.shareout());
// synopsys translate_off
defparam \Add0~9 .extended_lut = "off";
defparam \Add0~9 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~9 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[2] (
	.clk(\clk~input_o ),
	.d(\Add0~9_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[2]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[2] .is_wysiwyg = "true";
defparam \cnt_div[2] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~13 (
// Equation(s):
// \Add0~13_sumout  = SUM(( cnt_div[3] ) + ( GND ) + ( \Add0~10  ))
// \Add0~14  = CARRY(( cnt_div[3] ) + ( GND ) + ( \Add0~10  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[3]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~10 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~13_sumout ),
	.cout(\Add0~14 ),
	.shareout());
// synopsys translate_off
defparam \Add0~13 .extended_lut = "off";
defparam \Add0~13 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~13 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[3] (
	.clk(\clk~input_o ),
	.d(\Add0~13_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[3]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[3] .is_wysiwyg = "true";
defparam \cnt_div[3] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~17 (
// Equation(s):
// \Add0~17_sumout  = SUM(( cnt_div[4] ) + ( GND ) + ( \Add0~14  ))
// \Add0~18  = CARRY(( cnt_div[4] ) + ( GND ) + ( \Add0~14  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[4]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~14 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~17_sumout ),
	.cout(\Add0~18 ),
	.shareout());
// synopsys translate_off
defparam \Add0~17 .extended_lut = "off";
defparam \Add0~17 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~17 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[4] (
	.clk(\clk~input_o ),
	.d(\Add0~17_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[4]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[4] .is_wysiwyg = "true";
defparam \cnt_div[4] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~25 (
// Equation(s):
// \Add0~25_sumout  = SUM(( cnt_div[5] ) + ( GND ) + ( \Add0~18  ))
// \Add0~26  = CARRY(( cnt_div[5] ) + ( GND ) + ( \Add0~18  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[5]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~18 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~25_sumout ),
	.cout(\Add0~26 ),
	.shareout());
// synopsys translate_off
defparam \Add0~25 .extended_lut = "off";
defparam \Add0~25 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~25 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[5] (
	.clk(\clk~input_o ),
	.d(\Add0~25_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[5]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[5] .is_wysiwyg = "true";
defparam \cnt_div[5] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~21 (
// Equation(s):
// \Add0~21_sumout  = SUM(( cnt_div[6] ) + ( GND ) + ( \Add0~26  ))
// \Add0~22  = CARRY(( cnt_div[6] ) + ( GND ) + ( \Add0~26  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[6]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~26 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~21_sumout ),
	.cout(\Add0~22 ),
	.shareout());
// synopsys translate_off
defparam \Add0~21 .extended_lut = "off";
defparam \Add0~21 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~21 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[6] (
	.clk(\clk~input_o ),
	.d(\Add0~21_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[6]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[6] .is_wysiwyg = "true";
defparam \cnt_div[6] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = ( !cnt_div[6] & ( !cnt_div[5] & ( (!cnt_div[1] & (!cnt_div[2] & (!cnt_div[3] & !cnt_div[4]))) ) ) )

	.dataa(!cnt_div[1]),
	.datab(!cnt_div[2]),
	.datac(!cnt_div[3]),
	.datad(!cnt_div[4]),
	.datae(!cnt_div[6]),
	.dataf(!cnt_div[5]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~0 .extended_lut = "off";
defparam \Equal0~0 .lut_mask = 64'h8000000000000000;
defparam \Equal0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~29 (
// Equation(s):
// \Add0~29_sumout  = SUM(( cnt_div[7] ) + ( GND ) + ( \Add0~22  ))
// \Add0~30  = CARRY(( cnt_div[7] ) + ( GND ) + ( \Add0~22  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[7]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~22 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~29_sumout ),
	.cout(\Add0~30 ),
	.shareout());
// synopsys translate_off
defparam \Add0~29 .extended_lut = "off";
defparam \Add0~29 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~29 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[7] (
	.clk(\clk~input_o ),
	.d(\Add0~29_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[7]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[7] .is_wysiwyg = "true";
defparam \cnt_div[7] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~33 (
// Equation(s):
// \Add0~33_sumout  = SUM(( cnt_div[8] ) + ( GND ) + ( \Add0~30  ))
// \Add0~34  = CARRY(( cnt_div[8] ) + ( GND ) + ( \Add0~30  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[8]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~30 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~33_sumout ),
	.cout(\Add0~34 ),
	.shareout());
// synopsys translate_off
defparam \Add0~33 .extended_lut = "off";
defparam \Add0~33 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~33 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[8] (
	.clk(\clk~input_o ),
	.d(\Add0~33_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[8]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[8] .is_wysiwyg = "true";
defparam \cnt_div[8] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~37 (
// Equation(s):
// \Add0~37_sumout  = SUM(( cnt_div[9] ) + ( GND ) + ( \Add0~34  ))
// \Add0~38  = CARRY(( cnt_div[9] ) + ( GND ) + ( \Add0~34  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[9]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~34 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~37_sumout ),
	.cout(\Add0~38 ),
	.shareout());
// synopsys translate_off
defparam \Add0~37 .extended_lut = "off";
defparam \Add0~37 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~37 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[9] (
	.clk(\clk~input_o ),
	.d(\Add0~37_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[9]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[9] .is_wysiwyg = "true";
defparam \cnt_div[9] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~41 (
// Equation(s):
// \Add0~41_sumout  = SUM(( cnt_div[10] ) + ( GND ) + ( \Add0~38  ))
// \Add0~42  = CARRY(( cnt_div[10] ) + ( GND ) + ( \Add0~38  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[10]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~38 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~41_sumout ),
	.cout(\Add0~42 ),
	.shareout());
// synopsys translate_off
defparam \Add0~41 .extended_lut = "off";
defparam \Add0~41 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~41 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[10] (
	.clk(\clk~input_o ),
	.d(\Add0~41_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[10]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[10] .is_wysiwyg = "true";
defparam \cnt_div[10] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~49 (
// Equation(s):
// \Add0~49_sumout  = SUM(( cnt_div[11] ) + ( GND ) + ( \Add0~42  ))
// \Add0~50  = CARRY(( cnt_div[11] ) + ( GND ) + ( \Add0~42  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[11]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~42 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~49_sumout ),
	.cout(\Add0~50 ),
	.shareout());
// synopsys translate_off
defparam \Add0~49 .extended_lut = "off";
defparam \Add0~49 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~49 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[11] (
	.clk(\clk~input_o ),
	.d(\Add0~49_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[11]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[11] .is_wysiwyg = "true";
defparam \cnt_div[11] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~45 (
// Equation(s):
// \Add0~45_sumout  = SUM(( cnt_div[12] ) + ( GND ) + ( \Add0~50  ))
// \Add0~46  = CARRY(( cnt_div[12] ) + ( GND ) + ( \Add0~50  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[12]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~50 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~45_sumout ),
	.cout(\Add0~46 ),
	.shareout());
// synopsys translate_off
defparam \Add0~45 .extended_lut = "off";
defparam \Add0~45 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~45 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[12] (
	.clk(\clk~input_o ),
	.d(\Add0~45_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[12]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[12] .is_wysiwyg = "true";
defparam \cnt_div[12] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~1 (
// Equation(s):
// \Equal0~1_combout  = ( !cnt_div[12] & ( !cnt_div[11] & ( (!cnt_div[7] & (!cnt_div[8] & (!cnt_div[9] & !cnt_div[10]))) ) ) )

	.dataa(!cnt_div[7]),
	.datab(!cnt_div[8]),
	.datac(!cnt_div[9]),
	.datad(!cnt_div[10]),
	.datae(!cnt_div[12]),
	.dataf(!cnt_div[11]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~1 .extended_lut = "off";
defparam \Equal0~1 .lut_mask = 64'h8000000000000000;
defparam \Equal0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Add0~77 (
// Equation(s):
// \Add0~77_sumout  = SUM(( cnt_div[13] ) + ( GND ) + ( \Add0~46  ))
// \Add0~78  = CARRY(( cnt_div[13] ) + ( GND ) + ( \Add0~46  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[13]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~46 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~77_sumout ),
	.cout(\Add0~78 ),
	.shareout());
// synopsys translate_off
defparam \Add0~77 .extended_lut = "off";
defparam \Add0~77 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~77 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[13] (
	.clk(\clk~input_o ),
	.d(\Add0~77_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[13]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[13] .is_wysiwyg = "true";
defparam \cnt_div[13] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~81 (
// Equation(s):
// \Add0~81_sumout  = SUM(( cnt_div[14] ) + ( GND ) + ( \Add0~78  ))
// \Add0~82  = CARRY(( cnt_div[14] ) + ( GND ) + ( \Add0~78  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[14]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~78 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~81_sumout ),
	.cout(\Add0~82 ),
	.shareout());
// synopsys translate_off
defparam \Add0~81 .extended_lut = "off";
defparam \Add0~81 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~81 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[14] (
	.clk(\clk~input_o ),
	.d(\Add0~81_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[14]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[14] .is_wysiwyg = "true";
defparam \cnt_div[14] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~85 (
// Equation(s):
// \Add0~85_sumout  = SUM(( cnt_div[15] ) + ( GND ) + ( \Add0~82  ))
// \Add0~86  = CARRY(( cnt_div[15] ) + ( GND ) + ( \Add0~82  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[15]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~82 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~85_sumout ),
	.cout(\Add0~86 ),
	.shareout());
// synopsys translate_off
defparam \Add0~85 .extended_lut = "off";
defparam \Add0~85 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~85 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[15] (
	.clk(\clk~input_o ),
	.d(\Add0~85_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[15]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[15] .is_wysiwyg = "true";
defparam \cnt_div[15] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~89 (
// Equation(s):
// \Add0~89_sumout  = SUM(( cnt_div[16] ) + ( GND ) + ( \Add0~86  ))
// \Add0~90  = CARRY(( cnt_div[16] ) + ( GND ) + ( \Add0~86  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[16]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~86 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~89_sumout ),
	.cout(\Add0~90 ),
	.shareout());
// synopsys translate_off
defparam \Add0~89 .extended_lut = "off";
defparam \Add0~89 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~89 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[16] (
	.clk(\clk~input_o ),
	.d(\Add0~89_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[16]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[16] .is_wysiwyg = "true";
defparam \cnt_div[16] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~97 (
// Equation(s):
// \Add0~97_sumout  = SUM(( cnt_div[17] ) + ( GND ) + ( \Add0~90  ))
// \Add0~98  = CARRY(( cnt_div[17] ) + ( GND ) + ( \Add0~90  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[17]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~90 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~97_sumout ),
	.cout(\Add0~98 ),
	.shareout());
// synopsys translate_off
defparam \Add0~97 .extended_lut = "off";
defparam \Add0~97 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~97 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[17] (
	.clk(\clk~input_o ),
	.d(\Add0~97_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[17]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[17] .is_wysiwyg = "true";
defparam \cnt_div[17] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~93 (
// Equation(s):
// \Add0~93_sumout  = SUM(( cnt_div[18] ) + ( GND ) + ( \Add0~98  ))
// \Add0~94  = CARRY(( cnt_div[18] ) + ( GND ) + ( \Add0~98  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[18]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~98 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~93_sumout ),
	.cout(\Add0~94 ),
	.shareout());
// synopsys translate_off
defparam \Add0~93 .extended_lut = "off";
defparam \Add0~93 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~93 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[18] (
	.clk(\clk~input_o ),
	.d(\Add0~93_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[18]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[18] .is_wysiwyg = "true";
defparam \cnt_div[18] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~53 (
// Equation(s):
// \Add0~53_sumout  = SUM(( cnt_div[19] ) + ( GND ) + ( \Add0~94  ))
// \Add0~54  = CARRY(( cnt_div[19] ) + ( GND ) + ( \Add0~94  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[19]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~94 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~53_sumout ),
	.cout(\Add0~54 ),
	.shareout());
// synopsys translate_off
defparam \Add0~53 .extended_lut = "off";
defparam \Add0~53 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~53 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[19] (
	.clk(\clk~input_o ),
	.d(\Add0~53_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[19]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[19] .is_wysiwyg = "true";
defparam \cnt_div[19] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~57 (
// Equation(s):
// \Add0~57_sumout  = SUM(( cnt_div[20] ) + ( GND ) + ( \Add0~54  ))
// \Add0~58  = CARRY(( cnt_div[20] ) + ( GND ) + ( \Add0~54  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[20]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~54 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~57_sumout ),
	.cout(\Add0~58 ),
	.shareout());
// synopsys translate_off
defparam \Add0~57 .extended_lut = "off";
defparam \Add0~57 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~57 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[20] (
	.clk(\clk~input_o ),
	.d(\Add0~57_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[20]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[20] .is_wysiwyg = "true";
defparam \cnt_div[20] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~61 (
// Equation(s):
// \Add0~61_sumout  = SUM(( cnt_div[21] ) + ( GND ) + ( \Add0~58  ))
// \Add0~62  = CARRY(( cnt_div[21] ) + ( GND ) + ( \Add0~58  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[21]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~58 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~61_sumout ),
	.cout(\Add0~62 ),
	.shareout());
// synopsys translate_off
defparam \Add0~61 .extended_lut = "off";
defparam \Add0~61 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~61 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[21] (
	.clk(\clk~input_o ),
	.d(\Add0~61_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[21]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[21] .is_wysiwyg = "true";
defparam \cnt_div[21] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~65 (
// Equation(s):
// \Add0~65_sumout  = SUM(( cnt_div[22] ) + ( GND ) + ( \Add0~62  ))
// \Add0~66  = CARRY(( cnt_div[22] ) + ( GND ) + ( \Add0~62  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[22]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~62 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~65_sumout ),
	.cout(\Add0~66 ),
	.shareout());
// synopsys translate_off
defparam \Add0~65 .extended_lut = "off";
defparam \Add0~65 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~65 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[22] (
	.clk(\clk~input_o ),
	.d(\Add0~65_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[22]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[22] .is_wysiwyg = "true";
defparam \cnt_div[22] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~73 (
// Equation(s):
// \Add0~73_sumout  = SUM(( cnt_div[23] ) + ( GND ) + ( \Add0~66  ))
// \Add0~74  = CARRY(( cnt_div[23] ) + ( GND ) + ( \Add0~66  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[23]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~66 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~73_sumout ),
	.cout(\Add0~74 ),
	.shareout());
// synopsys translate_off
defparam \Add0~73 .extended_lut = "off";
defparam \Add0~73 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~73 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[23] (
	.clk(\clk~input_o ),
	.d(\Add0~73_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[23]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[23] .is_wysiwyg = "true";
defparam \cnt_div[23] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add0~69 (
// Equation(s):
// \Add0~69_sumout  = SUM(( cnt_div[24] ) + ( GND ) + ( \Add0~74  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!cnt_div[24]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\Add0~74 ),
	.sharein(gnd),
	.combout(),
	.sumout(\Add0~69_sumout ),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add0~69 .extended_lut = "off";
defparam \Add0~69 .lut_mask = 64'h0000FFFF000000FF;
defparam \Add0~69 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_div[24] (
	.clk(\clk~input_o ),
	.d(\Add0~69_sumout ),
	.asdata(vcc),
	.clrn(\rst~input_o ),
	.aload(gnd),
	.sclr(\rtl~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_div[24]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_div[24] .is_wysiwyg = "true";
defparam \cnt_div[24] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~2 (
// Equation(s):
// \Equal0~2_combout  = ( !cnt_div[24] & ( !cnt_div[23] & ( (!cnt_div[19] & (!cnt_div[20] & (!cnt_div[21] & !cnt_div[22]))) ) ) )

	.dataa(!cnt_div[19]),
	.datab(!cnt_div[20]),
	.datac(!cnt_div[21]),
	.datad(!cnt_div[22]),
	.datae(!cnt_div[24]),
	.dataf(!cnt_div[23]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~2 .extended_lut = "off";
defparam \Equal0~2 .lut_mask = 64'h8000000000000000;
defparam \Equal0~2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Equal0~3 (
// Equation(s):
// \Equal0~3_combout  = ( !cnt_div[17] & ( (!cnt_div[14] & (!cnt_div[15] & (!cnt_div[16] & !cnt_div[18]))) ) )

	.dataa(!cnt_div[14]),
	.datab(!cnt_div[15]),
	.datac(!cnt_div[16]),
	.datad(!cnt_div[18]),
	.datae(!cnt_div[17]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Equal0~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Equal0~3 .extended_lut = "off";
defparam \Equal0~3 .lut_mask = 64'h8000000080000000;
defparam \Equal0~3 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \rtl~0 (
// Equation(s):
// \rtl~0_combout  = LCELL(( !cnt_div[13] & ( \Equal0~3_combout  & ( (cnt_div[0] & (\Equal0~0_combout  & (\Equal0~1_combout  & \Equal0~2_combout ))) ) ) ))

	.dataa(!cnt_div[0]),
	.datab(!\Equal0~0_combout ),
	.datac(!\Equal0~1_combout ),
	.datad(!\Equal0~2_combout ),
	.datae(!cnt_div[13]),
	.dataf(!\Equal0~3_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\rtl~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \rtl~0 .extended_lut = "off";
defparam \rtl~0 .lut_mask = 64'h0000000000010000;
defparam \rtl~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \sw[1]~input (
	.i(sw[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sw[1]~input_o ));
// synopsys translate_off
defparam \sw[1]~input .bus_hold = "false";
defparam \sw[1]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \sw2[1] (
	.clk(\clk~input_o ),
	.d(\sw[1]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(sw2[1]),
	.prn(vcc));
// synopsys translate_off
defparam \sw2[1] .is_wysiwyg = "true";
defparam \sw2[1] .power_up = "low";
// synopsys translate_on

dffeas \sw1[1] (
	.clk(\clk~input_o ),
	.d(sw2[1]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(sw1[1]),
	.prn(vcc));
// synopsys translate_off
defparam \sw1[1] .is_wysiwyg = "true";
defparam \sw1[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \always2~0 (
// Equation(s):
// \always2~0_combout  = (!cnt_main[0] & sw1[1])

	.dataa(!cnt_main[0]),
	.datab(!sw1[1]),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\always2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \always2~0 .extended_lut = "off";
defparam \always2~0 .lut_mask = 64'h2222222222222222;
defparam \always2~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \sw[0]~input (
	.i(sw[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sw[0]~input_o ));
// synopsys translate_off
defparam \sw[0]~input .bus_hold = "false";
defparam \sw[0]~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \sw2[0] (
	.clk(\clk~input_o ),
	.d(\sw[0]~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(sw2[0]),
	.prn(vcc));
// synopsys translate_off
defparam \sw2[0] .is_wysiwyg = "true";
defparam \sw2[0] .power_up = "low";
// synopsys translate_on

dffeas \sw1[0] (
	.clk(\clk~input_o ),
	.d(sw2[0]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(sw1[0]),
	.prn(vcc));
// synopsys translate_off
defparam \sw1[0] .is_wysiwyg = "true";
defparam \sw1[0] .power_up = "low";
// synopsys translate_on

cyclonev_mac \Mult0~8 (
	.sub(gnd),
	.negate(gnd),
	.accumulate(gnd),
	.loadconst(gnd),
	.ax({\always2~0_combout ,!\always2~0_combout }),
	.ay({sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],sw1[0],vcc}),
	.az(26'b00000000000000000000000000),
	.bx(18'b000000000000000000),
	.by(19'b0000000000000000000),
	.bz(18'b000000000000000000),
	.coefsela(3'b000),
	.coefselb(3'b000),
	.clk(3'b000),
	.aclr(2'b00),
	.ena(3'b111),
	.scanin(27'b000000000000000000000000000),
	.chainin(1'b0),
	.dftout(),
	.resulta(\Mult0~8_RESULTA_bus ),
	.resultb(),
	.scanout(),
	.chainout());
// synopsys translate_off
defparam \Mult0~8 .accumulate_clock = "none";
defparam \Mult0~8 .ax_clock = "none";
defparam \Mult0~8 .ax_width = 2;
defparam \Mult0~8 .ay_scan_in_clock = "none";
defparam \Mult0~8 .ay_scan_in_width = 18;
defparam \Mult0~8 .ay_use_scan_in = "false";
defparam \Mult0~8 .az_clock = "none";
defparam \Mult0~8 .bx_clock = "none";
defparam \Mult0~8 .by_clock = "none";
defparam \Mult0~8 .by_use_scan_in = "false";
defparam \Mult0~8 .bz_clock = "none";
defparam \Mult0~8 .coef_a_0 = 0;
defparam \Mult0~8 .coef_a_1 = 0;
defparam \Mult0~8 .coef_a_2 = 0;
defparam \Mult0~8 .coef_a_3 = 0;
defparam \Mult0~8 .coef_a_4 = 0;
defparam \Mult0~8 .coef_a_5 = 0;
defparam \Mult0~8 .coef_a_6 = 0;
defparam \Mult0~8 .coef_a_7 = 0;
defparam \Mult0~8 .coef_b_0 = 0;
defparam \Mult0~8 .coef_b_1 = 0;
defparam \Mult0~8 .coef_b_2 = 0;
defparam \Mult0~8 .coef_b_3 = 0;
defparam \Mult0~8 .coef_b_4 = 0;
defparam \Mult0~8 .coef_b_5 = 0;
defparam \Mult0~8 .coef_b_6 = 0;
defparam \Mult0~8 .coef_b_7 = 0;
defparam \Mult0~8 .coef_sel_a_clock = "none";
defparam \Mult0~8 .coef_sel_b_clock = "none";
defparam \Mult0~8 .delay_scan_out_ay = "false";
defparam \Mult0~8 .delay_scan_out_by = "false";
defparam \Mult0~8 .enable_double_accum = "false";
defparam \Mult0~8 .load_const_clock = "none";
defparam \Mult0~8 .load_const_value = 0;
defparam \Mult0~8 .mode_sub_location = 0;
defparam \Mult0~8 .negate_clock = "none";
defparam \Mult0~8 .operand_source_max = "input";
defparam \Mult0~8 .operand_source_may = "input";
defparam \Mult0~8 .operand_source_mbx = "input";
defparam \Mult0~8 .operand_source_mby = "input";
defparam \Mult0~8 .operation_mode = "m18x18_full";
defparam \Mult0~8 .output_clock = "none";
defparam \Mult0~8 .preadder_subtract_a = "false";
defparam \Mult0~8 .preadder_subtract_b = "false";
defparam \Mult0~8 .result_a_width = 64;
defparam \Mult0~8 .signed_max = "false";
defparam \Mult0~8 .signed_may = "false";
defparam \Mult0~8 .signed_mbx = "false";
defparam \Mult0~8 .signed_mby = "false";
defparam \Mult0~8 .sub_clock = "none";
defparam \Mult0~8 .use_chainadder = "false";
// synopsys translate_on

cyclonev_lcell_comb \cnt_main[0]~0 (
// Equation(s):
// \cnt_main[0]~0_combout  = !cnt_main[0] $ (!\Mult0~8_resulta )

	.dataa(!cnt_main[0]),
	.datab(!\Mult0~8_resulta ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\cnt_main[0]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \cnt_main[0]~0 .extended_lut = "off";
defparam \cnt_main[0]~0 .lut_mask = 64'h6666666666666666;
defparam \cnt_main[0]~0 .shared_arith = "off";
// synopsys translate_on

dffeas rst2(
	.clk(\clk~input_o ),
	.d(\rst~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\rst2~q ),
	.prn(vcc));
// synopsys translate_off
defparam rst2.is_wysiwyg = "true";
defparam rst2.power_up = "low";
// synopsys translate_on

dffeas rst1(
	.clk(\clk~input_o ),
	.d(\rst2~q ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\rst1~q ),
	.prn(vcc));
// synopsys translate_off
defparam rst1.is_wysiwyg = "true";
defparam rst1.power_up = "low";
// synopsys translate_on

dffeas \cnt_main[0] (
	.clk(\rtl~0_combout ),
	.d(\cnt_main[0]~0_combout ),
	.asdata(vcc),
	.clrn(\rst1~q ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_main[0]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_main[0] .is_wysiwyg = "true";
defparam \cnt_main[0] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add1~0 (
// Equation(s):
// \Add1~0_combout  = !cnt_main[1] $ (!\Mult0~9  $ (((cnt_main[0] & \Mult0~8_resulta ))))

	.dataa(!cnt_main[0]),
	.datab(!cnt_main[1]),
	.datac(!\Mult0~8_resulta ),
	.datad(!\Mult0~9 ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Add1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add1~0 .extended_lut = "off";
defparam \Add1~0 .lut_mask = 64'h36C936C936C936C9;
defparam \Add1~0 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_main[1] (
	.clk(\rtl~0_combout ),
	.d(\Add1~0_combout ),
	.asdata(vcc),
	.clrn(\rst1~q ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_main[1]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_main[1] .is_wysiwyg = "true";
defparam \cnt_main[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Add1~1 (
// Equation(s):
// \Add1~1_combout  = ( \Mult0~9  & ( \Mult0~10  & ( !cnt_main[2] $ ((((cnt_main[0] & \Mult0~8_resulta )) # (cnt_main[1]))) ) ) ) # ( !\Mult0~9  & ( \Mult0~10  & ( !cnt_main[2] $ (((cnt_main[0] & (cnt_main[1] & \Mult0~8_resulta )))) ) ) ) # ( \Mult0~9  & ( 
// !\Mult0~10  & ( !cnt_main[2] $ (((!cnt_main[1] & ((!cnt_main[0]) # (!\Mult0~8_resulta ))))) ) ) ) # ( !\Mult0~9  & ( !\Mult0~10  & ( !cnt_main[2] $ (((!cnt_main[0]) # ((!cnt_main[1]) # (!\Mult0~8_resulta )))) ) ) )

	.dataa(!cnt_main[0]),
	.datab(!cnt_main[1]),
	.datac(!cnt_main[2]),
	.datad(!\Mult0~8_resulta ),
	.datae(!\Mult0~9 ),
	.dataf(!\Mult0~10 ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Add1~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Add1~1 .extended_lut = "off";
defparam \Add1~1 .lut_mask = 64'h0F1E3C78F0E1C387;
defparam \Add1~1 .shared_arith = "off";
// synopsys translate_on

dffeas \cnt_main[2] (
	.clk(\rtl~0_combout ),
	.d(\Add1~1_combout ),
	.asdata(vcc),
	.clrn(\rst1~q ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt_main[2]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt_main[2] .is_wysiwyg = "true";
defparam \cnt_main[2] .power_up = "low";
// synopsys translate_on

assign cout = \cout~output_o ;

assign led[0] = \led[0]~output_o ;

assign led[1] = \led[1]~output_o ;

assign led[2] = \led[2]~output_o ;

endmodule
