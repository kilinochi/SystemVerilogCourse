// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.1.0 Build 196 10/24/2016 SJ Lite Edition"

// DATE "05/11/2019 21:43:24"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module elab_6 (
	sw_0_0,
	sw_1_0,
	sw_0_1,
	sw_1_1,
	sw_0_2,
	sw_1_2,
	sw_0_3,
	sw_1_3,
	pba,
	led);
input 	sw_0_0;
input 	sw_1_0;
input 	sw_0_1;
input 	sw_1_1;
input 	sw_0_2;
input 	sw_1_2;
input 	sw_0_3;
input 	sw_1_3;
input 	pba;
output 	[3:0] led;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \led[0]~output_o ;
wire \led[1]~output_o ;
wire \led[2]~output_o ;
wire \led[3]~output_o ;
wire \sw[0][0]~input_o ;
wire \pba~input_o ;
wire \sw[1][0]~input_o ;
wire \u1|nand_o~0_combout ;
wire \sw[0][1]~input_o ;
wire \sw[1][1]~input_o ;
wire \u2|nand_o~0_combout ;
wire \sw[0][2]~input_o ;
wire \sw[1][2]~input_o ;
wire \u3|nand_o~0_combout ;
wire \sw[0][3]~input_o ;
wire \sw[1][3]~input_o ;
wire \u4|nand_o~0_combout ;


cyclonev_io_obuf \led[0]~output (
	.i(\u1|nand_o~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[0]~output .bus_hold = "false";
defparam \led[0]~output .open_drain_output = "false";
defparam \led[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \led[1]~output (
	.i(\u2|nand_o~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[1]~output .bus_hold = "false";
defparam \led[1]~output .open_drain_output = "false";
defparam \led[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \led[2]~output (
	.i(\u3|nand_o~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[2]~output .bus_hold = "false";
defparam \led[2]~output .open_drain_output = "false";
defparam \led[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \led[3]~output (
	.i(\u4|nand_o~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \led[3]~output .bus_hold = "false";
defparam \led[3]~output .open_drain_output = "false";
defparam \led[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \sw[0][0]~input (
	.i(sw_0_0),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sw[0][0]~input_o ));
// synopsys translate_off
defparam \sw[0][0]~input .bus_hold = "false";
defparam \sw[0][0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \pba~input (
	.i(pba),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\pba~input_o ));
// synopsys translate_off
defparam \pba~input .bus_hold = "false";
defparam \pba~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \sw[1][0]~input (
	.i(sw_1_0),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sw[1][0]~input_o ));
// synopsys translate_off
defparam \sw[1][0]~input .bus_hold = "false";
defparam \sw[1][0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \u1|nand_o~0 (
// Equation(s):
// \u1|nand_o~0_combout  = (!\pba~input_o  & ((\sw[1][0]~input_o ))) # (\pba~input_o  & (\sw[0][0]~input_o ))

	.dataa(!\sw[0][0]~input_o ),
	.datab(!\pba~input_o ),
	.datac(!\sw[1][0]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\u1|nand_o~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \u1|nand_o~0 .extended_lut = "off";
defparam \u1|nand_o~0 .lut_mask = 64'h1D1D1D1D1D1D1D1D;
defparam \u1|nand_o~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \sw[0][1]~input (
	.i(sw_0_1),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sw[0][1]~input_o ));
// synopsys translate_off
defparam \sw[0][1]~input .bus_hold = "false";
defparam \sw[0][1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \sw[1][1]~input (
	.i(sw_1_1),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sw[1][1]~input_o ));
// synopsys translate_off
defparam \sw[1][1]~input .bus_hold = "false";
defparam \sw[1][1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \u2|nand_o~0 (
// Equation(s):
// \u2|nand_o~0_combout  = (!\pba~input_o  & ((\sw[1][1]~input_o ))) # (\pba~input_o  & (\sw[0][1]~input_o ))

	.dataa(!\pba~input_o ),
	.datab(!\sw[0][1]~input_o ),
	.datac(!\sw[1][1]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\u2|nand_o~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \u2|nand_o~0 .extended_lut = "off";
defparam \u2|nand_o~0 .lut_mask = 64'h1B1B1B1B1B1B1B1B;
defparam \u2|nand_o~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \sw[0][2]~input (
	.i(sw_0_2),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sw[0][2]~input_o ));
// synopsys translate_off
defparam \sw[0][2]~input .bus_hold = "false";
defparam \sw[0][2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \sw[1][2]~input (
	.i(sw_1_2),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sw[1][2]~input_o ));
// synopsys translate_off
defparam \sw[1][2]~input .bus_hold = "false";
defparam \sw[1][2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \u3|nand_o~0 (
// Equation(s):
// \u3|nand_o~0_combout  = (!\pba~input_o  & ((\sw[1][2]~input_o ))) # (\pba~input_o  & (\sw[0][2]~input_o ))

	.dataa(!\pba~input_o ),
	.datab(!\sw[0][2]~input_o ),
	.datac(!\sw[1][2]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\u3|nand_o~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \u3|nand_o~0 .extended_lut = "off";
defparam \u3|nand_o~0 .lut_mask = 64'h1B1B1B1B1B1B1B1B;
defparam \u3|nand_o~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \sw[0][3]~input (
	.i(sw_0_3),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sw[0][3]~input_o ));
// synopsys translate_off
defparam \sw[0][3]~input .bus_hold = "false";
defparam \sw[0][3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \sw[1][3]~input (
	.i(sw_1_3),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sw[1][3]~input_o ));
// synopsys translate_off
defparam \sw[1][3]~input .bus_hold = "false";
defparam \sw[1][3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \u4|nand_o~0 (
// Equation(s):
// \u4|nand_o~0_combout  = (!\pba~input_o  & ((\sw[1][3]~input_o ))) # (\pba~input_o  & (\sw[0][3]~input_o ))

	.dataa(!\pba~input_o ),
	.datab(!\sw[0][3]~input_o ),
	.datac(!\sw[1][3]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\u4|nand_o~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \u4|nand_o~0 .extended_lut = "off";
defparam \u4|nand_o~0 .lut_mask = 64'h1B1B1B1B1B1B1B1B;
defparam \u4|nand_o~0 .shared_arith = "off";
// synopsys translate_on

assign led[0] = \led[0]~output_o ;

assign led[1] = \led[1]~output_o ;

assign led[2] = \led[2]~output_o ;

assign led[3] = \led[3]~output_o ;

endmodule
